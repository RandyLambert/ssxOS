;主引导程序 在屏幕上打印字符串“1 MBR”，背景色为黑色，前景色为绿色
;---------------------------------------------
SECTION MBR vstart=0x7c00 ;告诉编译器我的起始地址编译为0x7c00
    mov ax,cs             ;由于BIOS是通过jmp 0:0x7c00 跳转1到mbr中的，故此时cs为0，对于ds，es，fs，gs这些寄存器cpu不能直接根据寄存去中转
    mov ds,ax             ;借用cs的0值赋值给ds，es
    mov es,ax
    mov ss,ax
    mov fs,ax
    mov sp,0x7c00         ;初始化栈指针，在cpu上运行，是程序就要用到程序员栈0x7c00位置之下是暂时安全的位置，就把他当做栈用
    
;清屏利用0x06号功能，上卷全部行，则可清屏，11,28清屏操作，因为BIOS在工作的时候，会有一些输出，检查硬件的结果信息，先把bios的输入清掉
;-----------------------------------------------
;INT Ox10  功能号:0x06    功能描述:上卷窗口
;-----------------------------------------------
;输入:
;AH 功能号 = 0x06
;AL = 上卷的的函数（如果为0，表示全部）
;BH = 上卷行的属性
;(CL,CH) = 窗口左上角的(X,Y)位置
;(DL,DH) = 窗口右下角的(X,Y)位置
;无返回值：
    mov ax, 0x600
    mov bx, 0x700
    mov cx, 0        ;左上角：（0,0）
    mov dx, 0x184f   ;右下角：（80,25），
                     ;VGA文本模式中，一行只能容纳80个字符，供25行
                     ;下标是从0开始，所以0x18=24,0x4f=79
    int 0x10         ;int 0x10

;;;;;;;;;;;;;   下面三行代码获取光标位置   ;;;;;;;;;;;;;;30-35做打印前的工作，先获取光标的位置，目的是避免打印字符混乱
; .get_cursor 获取当前光标位置，在光标位置处打印字符，字符不一定打印到光标位置，光标只是一个人为限制
    mov ah, 3        ;输入：3号子功能是获取光标位置，需要存入ah寄存器
    mov bh, 0        ;bh寄存去存储带获取光标的叶号

    int 0x10         ;输出：ch=光标开始行，cl=光标结束行
                     ;dh=光标所在行号，d1=光标所在列号

;;;;;;;;;;;;;;;;;; 获取光标位置结束 ;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;   打印字符串    ;;;;;;;;;;;;;;;;;;;;;
    ;还是用10h 中断，不过这次调用的13号子功能打印字符串
    mov ax, message  ; 两个字节表示一个字符
    mov bp, ax       ; esLbp 为串的首地址，es此时同cs一致
                     ; 开头已经为sreg初始化

    ; 光标位置要用到 dx 寄存器中内容,cx 中的光标位置可忽略
    mov cx, 5        ;cx 为串长度,不包括结束符 0 的字符个数
    mov ax, 0x1301   ;子功能号 13 显示字符及属性,要存入 ah 寄存器,调用0x13好子功能，01对应的是al寄存器，表示的是写字符的方式，低二位有意义
                     ;al 设置写字符方式 al=01: 显示字符串,光标跟随移动  al=0，显示字符串，并且光标返回起始位置 al=2，显示字符串及其属性，并且光标返回起始位置  al=3，显示字符串及其属性，光标跟随到新位置。
    mov bx, 0x2      ;bh 存储要显示的页号,此处是第 0 页,
                     ;bl 中是字符属性,属性黑底绿字(bl = 02h)
    int 0x10         ;执行 BIOS 0x10 号中断
    ;;;;;;;;; 打字字符串结束 ;;;;;;;;;;;;;;;

    jmp $            ;使程序悬停在此,死循环

    message db "1 MBR" ;定义打印的字符串
    times 510-($-$$) db 0 ;$$表示本section的起始位置，因为mbr程序需要填满512字节，最后两个字节是魔数
    db 0x55,0xaa
